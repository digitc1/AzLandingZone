# This is a basic workflow to help you get started with Actions


name: build-and-publish

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches: [ develop, master ]

env:
  major: 0
  minor: 0
  patch: $GITHUB_RUN_ID
  buildVersion: ${{ env.major }}.${{ env.minor }}.${{ env.patch }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  pack:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:      
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: update version in psd file
      shell: pwsh
      run: |
        $manifestPath = Join-Path -Path "$env:GITHUB_WORKSPACE" -ChildPath "AzLandingZone/AzLandingZone.psd1"
        $manifestContent = Get-Content -Path $manifestPath -Raw
        $manifestContent = $manifestContent -replace '<ModuleVersion>', ${{ env.buildVersion }}
        $manifestContent | Set-Content -Path $manifestPath
    
    - name: update version in nuspec file
      shell: pwsh
      run: |
        $manifestPath = Join-Path -Path "$env:GITHUB_WORKSPACE" -ChildPath "AzLandingZone/AzLandingZone.nuspec"
        $manifestContent = Get-Content -Path $manifestPath -Raw
        $manifestContent = $manifestContent -replace 'VERSIONHERE', ${{ env.buildVersion }}
        $manifestContent | Set-Content -Path $manifestPath

    - name: setup NuGet
      uses: nuget/setup-nuget@v1
      
    - name: Authenticate
      run: nuget sources add -source https://nuget.pkg.github.com/digitc1/index.json -name github -u digitc1 -p ${{ secrets.GITHUB_TOKEN }}
              
    - name: nuget pack
      run: nuget pack AzLandingZone/AzLandingZone.nuspec

    - name: push
      if: ${{ success() && github.ref == 'refs/heads/develop' }}
      run: nuget push **.nupkg -source github -apikey ${{ secrets.GITHUB_TOKEN }}

    - name: nuget push for master
      if: ${{ success() && github.ref == 'refs/heads/master' }}
      run: nuget push **.nupkg -source github -apikey ${{ secrets.GITHUB_TOKEN }}
